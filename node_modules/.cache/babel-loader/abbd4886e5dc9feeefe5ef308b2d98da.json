{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\9090\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA-\\u05DE\\u05DC\\u05D9\\\\\\u05E4\\u05E8\\u05E7\\u05D8\\u05D9\\u05E7\\u05D5\\u05D3\\\\client\\\\ToDoListReact-master\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport service from './service.js';\nfunction App() {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  async function getTodos() {\n    const todos = await service.getTasks();\n    setTodos(todos);\n  }\n  async function createTodo(e) {\n    e.preventDefault();\n    await service.addTask(newTodo);\n    setNewTodo(\"\"); //clear input\n    await getTodos(); //refresh tasks list (in order to see the new one)\n  }\n\n  async function updateCompleted(todo) {\n    await service.setCompleted(todo.id);\n    await getTodos(); //refresh tasks list (in order to see the updated one)\n  }\n\n  async function deleteTodo(id) {\n    await service.deleteTask(id);\n    await getTodos(); //refresh tasks list\n  }\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todoapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"todos\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: createTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"new-todo\",\n    placeholder: \"Well, let's take on the day\",\n    value: newTodo,\n    onChange: e => setNewTodo(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"main\",\n    style: {\n      display: \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, todos.map(todo => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: todo.isComplete ? \"completed\" : \"\",\n      key: todo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"toggle\",\n      type: \"checkbox\",\n      defaultChecked: todo.isComplete,\n      onChange: e => updateCompleted(todo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, todo.name), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"destroy\",\n      onClick: () => deleteTodo(todo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    })));\n  }))));\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","service","App","newTodo","setNewTodo","todos","setTodos","getTodos","getTasks","createTodo","e","preventDefault","addTask","updateCompleted","todo","setCompleted","id","deleteTodo","deleteTask","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","style","display","map","isComplete","key","type","defaultChecked","name","onClick"],"sources":["C:/Users/9090/תכנות-מלי/פרקטיקוד/client/ToDoListReact-master/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport service from './service.js';\n\nfunction App() {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  async function getTodos() {\n    const todos = await service.getTasks();\n    setTodos(todos);\n  }\n\n  async function createTodo(e) {\n    e.preventDefault();\n    await service.addTask(newTodo);\n    setNewTodo(\"\");//clear input\n    await getTodos();//refresh tasks list (in order to see the new one)\n  }\n\n  async function updateCompleted(todo) {\n    await service.setCompleted(todo.id);\n    await getTodos();//refresh tasks list (in order to see the updated one)\n  }\n\n  async function deleteTodo(id) {\n    await service.deleteTask(id);\n    await getTodos();//refresh tasks list\n  }\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={createTodo}>\n          <input className=\"new-todo\" placeholder=\"Well, let's take on the day\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} />\n        </form>\n      </header>\n      <section className=\"main\" style={{ display: \"block\" }}>\n        <ul className=\"todo-list\">\n          {todos.map(todo => {\n            return (\n              <li className={todo.isComplete ? \"completed\" : \"\"} key={todo.id}>\n                <div className=\"view\">\n                  <input className=\"toggle\" type=\"checkbox\" defaultChecked={todo.isComplete} onChange={(e) => updateCompleted(todo)} />\n                  <label>{todo.name}</label>\n                  <button className=\"destroy\" onClick={() => deleteTodo(todo.id)}></button>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n    </section >\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,cAAc;AAElC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,eAAeO,QAAQA,CAAA,EAAG;IACxB,MAAMF,KAAK,GAAG,MAAMJ,OAAO,CAACO,QAAQ,EAAE;IACtCF,QAAQ,CAACD,KAAK,CAAC;EACjB;EAEA,eAAeI,UAAUA,CAACC,CAAC,EAAE;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMV,OAAO,CAACW,OAAO,CAACT,OAAO,CAAC;IAC9BC,UAAU,CAAC,EAAE,CAAC,CAAC;IACf,MAAMG,QAAQ,EAAE,CAAC;EACnB;;EAEA,eAAeM,eAAeA,CAACC,IAAI,EAAE;IACnC,MAAMb,OAAO,CAACc,YAAY,CAACD,IAAI,CAACE,EAAE,CAAC;IACnC,MAAMT,QAAQ,EAAE,CAAC;EACnB;;EAEA,eAAeU,UAAUA,CAACD,EAAE,EAAE;IAC5B,MAAMf,OAAO,CAACiB,UAAU,CAACF,EAAE,CAAC;IAC5B,MAAMT,QAAQ,EAAE,CAAC;EACnB;;EAEAR,SAAS,CAAC,MAAM;IACdQ,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,KAAA,CAAAqB,aAAA;IAASC,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1B5B,KAAA,CAAAqB,aAAA;IAAQC,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxB5B,KAAA,CAAAqB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,OAAK,CAAK,eACd5B,KAAA,CAAAqB,aAAA;IAAMQ,QAAQ,EAAElB,UAAW;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB5B,KAAA,CAAAqB,aAAA;IAAOC,SAAS,EAAC,UAAU;IAACQ,WAAW,EAAC,6BAA6B;IAACC,KAAK,EAAE1B,OAAQ;IAAC2B,QAAQ,EAAGpB,CAAC,IAAKN,UAAU,CAACM,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CAChI,CACA,eACT5B,KAAA,CAAAqB,aAAA;IAASC,SAAS,EAAC,MAAM;IAACY,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAQ,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpD5B,KAAA,CAAAqB,aAAA;IAAIC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtBrB,KAAK,CAAC6B,GAAG,CAACpB,IAAI,IAAI;IACjB,oBACEhB,KAAA,CAAAqB,aAAA;MAAIC,SAAS,EAAEN,IAAI,CAACqB,UAAU,GAAG,WAAW,GAAG,EAAG;MAACC,GAAG,EAAEtB,IAAI,CAACE,EAAG;MAAAK,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC9D5B,KAAA,CAAAqB,aAAA;MAAKC,SAAS,EAAC,MAAM;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACnB5B,KAAA,CAAAqB,aAAA;MAAOC,SAAS,EAAC,QAAQ;MAACiB,IAAI,EAAC,UAAU;MAACC,cAAc,EAAExB,IAAI,CAACqB,UAAW;MAACL,QAAQ,EAAGpB,CAAC,IAAKG,eAAe,CAACC,IAAI,CAAE;MAAAO,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAG,eACrH5B,KAAA,CAAAqB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQZ,IAAI,CAACyB,IAAI,CAAS,eAC1BzC,KAAA,CAAAqB,aAAA;MAAQC,SAAS,EAAC,SAAS;MAACoB,OAAO,EAAEA,CAAA,KAAMvB,UAAU,CAACH,IAAI,CAACE,EAAE,CAAE;MAAAK,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAU,CACrE,CACH;EAET,CAAC,CAAC,CACC,CACG,CACD;AAEf;AAEA,eAAexB,GAAG"},"metadata":{},"sourceType":"module"}